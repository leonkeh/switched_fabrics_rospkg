<?xml version="1.0"?>
<launch>
	<arg name="sim" default="false"  />
	<param name="sim" type="bool" value="$(arg sim)"/>
	
	<!-- select the correct state feedback topic based on deploying in the sim or lab -->
	<arg name="joint_states_topic" default="/dinova/omni_states_vicon" if="$(arg sim)"/>
	<arg name="joint_states_topic" default="dinova/omni_states_vicon" unless="$(arg sim)"/>

  	<arg name="with_obstacles" default="true" />
	<arg name="lidar" default="false"  />
	

	<!-- Robot model -->
	<!-- <rosparam file="$(find switched_control)/config/behaviors.yaml" command="load" /> -->
	<group ns="$(env ROBOT_NAME)" if="$(arg sim)">
		<param name="with_obstacles" type="bool" value="$(arg with_obstacles)"/>
		<group if="$(arg lidar)">
			<rosparam file="$(find dinova_fabrics_wrapper)/config/dinova_lidar.yaml"/>
		</group>
		<group unless="$(arg lidar)">
			<rosparam file="$(find dinova_fabrics_wrapper)/config/dinova.yaml"/>
		</group>
		<node pkg="switched_control" type="dinova_switched_joint_action_server.py" name="switched_action_server" output="screen">
			<remap from="joints_velocity_controller/command" to="/joints_velocity_controller/command" />
			<remap from="omnidrive_velocity_controller/command" to="/omnidrive_velocity_controller/command" />
			<remap from="joint_states" to="$(arg joint_states_topic)" />
		</node>

		<!-- launch the perception pipeline that publishes to the objects topic -->
		<node pkg="switched_control" type="obstacle_perception_node.py" name="obstacle_perception" output="screen"></node>
	</group>

	<group ns="$(env ROBOT_NAME)" unless="$(arg sim)">
		<param name="with_obstacles" type="bool" value="$(arg with_obstacles)"/>
		<group if="$(arg lidar)">
			<rosparam file="$(find dinova_fabrics_wrapper)/config/dinova_lidar.yaml"/>
		</group>
		<group unless="$(arg lidar)">
			<rosparam file="$(find dinova_fabrics_wrapper)/config/dinova.yaml"/>
		</group>
		<node pkg="switched_control" type="dinova_switched_joint_action_server.py" name="switched_action_server" output="screen">
			<remap from="joints_velocity_controller/command" to="kinova/command" />
			<remap from="joint_states" to="$(arg joint_states_topic)" />
		</node>
	</group>
</launch>